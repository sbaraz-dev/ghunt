{"version":3,"sources":["components/brand.js","components/page-header.js","components/group-title.js","components/filters.js","components/repo.js","components/page-loader.js","feed.js","app.js","index.js"],"names":["Brand","alignItems","maxWidth","src","objectFit","fontSize","Header","justifyContent","isInline","spacing","leftIcon","colorScheme","GroupTitle","startDate","endDate","startMoment","moment","endMoment","fontWeight","fromNow","as","ml","format","Filters","props","viewType","onViewChange","dateJump","onDateJumpChange","language","onLanguageChange","value","onChange","e","target","width","minWidth","bg","languages","map","label","Button","px","_focus","boxShadow","textAlign","borderWidth","textTransform","onClick","rounded","Repo","repo","isListView","padding","borderRadius","mb","href","html_url","color","name","owner","login","created_at","description","cursor","variant","iconSpacing","_hover","textDecor","stargazers_count","forks_count","open_issues_count","avatar_url","w","h","mr","PageLoader","position","left","right","bottom","top","zIndex","thickness","Feed","useFetch","loading","get","error","useState","setViewType","setDateJump","setLanguage","setStartDate","subtract","setEndDate","repositories","setRepositories","useEffect","filters","transformedFilters","languageQuery","dateQuery","q","sort","order","transformFilters","filtersQuery","URLSearchParams","toString","then","res","items","console","log","mx","length","py","repoGroup","counter","groupTitle","columns","mt","isLoading","App","minHeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b39b4ff4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Box, Flex, Heading, Text } from \"@chakra-ui/layout\";\r\nimport { Image } from \"@chakra-ui/image\";\r\n\r\nexport function Brand() {\r\n    return(\r\n        <Flex alignItems=\"center\">\r\n\r\n            <Image maxWidth=\"140px\" src='/logo.svg' objectFit=\"auto\" />\r\n\r\n            <Box>\r\n                <Heading fontSize=\"16px\">adesso_GitHub</Heading>\r\n                <Text fontSize=\"14px\"> Most starred projects on GitHub</Text>\r\n            </Box>\r\n\r\n        </Flex>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { Flex, Stack } from \"@chakra-ui/layout\";\r\nimport { Button } from \"@chakra-ui/button\";\r\n\r\nimport { FaGithub, FaChrome, FaTwitter } from 'react-icons/fa';\r\n\r\nimport { Brand } from './brand.js';\r\n\r\nexport function Header() {\r\n    return (\r\n        <Flex justifyContent='space-between' alignItems=\"center\" >\r\n\r\n            <Brand />\r\n\r\n            <Stack isInline spacing=\"10px\">\r\n                <Button leftIcon={<FaGithub/>}> View Source</Button>\r\n                <Button leftIcon={<FaChrome/>} colorScheme=\"red\" >Use Extension</Button>\r\n                <Button leftIcon={<FaTwitter/>} colorScheme=\"twitter\" >Tweet</Button>\r\n            </Stack>\r\n\r\n        </Flex>\r\n    )\r\n}","import { Text } from '@chakra-ui/layout';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\n\r\nexport function GroupTitle({ startDate, endDate }) {\r\n    if (!startDate || !endDate) {\r\n        return null;\r\n    }\r\n\r\n    const startMoment = moment(startDate);\r\n    const endMoment = moment(endDate);\r\n\r\n    return (\r\n        <Text fontSize=\"18px\" fontWeight=\"650\" >\r\n            { startMoment.fromNow() }{\" \"} \r\n            <Text \r\n                as='span' \r\n                fontSize=\"16px\" \r\n                fontWeight=\"400\" \r\n                ml=\"5px\"\r\n            >\r\n                { startMoment.format(\"D MMMM, YYYY\")} - { endMoment.format(\"D MMMM, YYYY\") }\r\n            </Text>\r\n        </Text>\r\n    )\r\n}","import React from 'react';\r\nimport languages from '../data/languages.json';\r\n\r\nimport { Box, Stack } from '@chakra-ui/layout';\r\nimport { Select } from '@chakra-ui/select';\r\nimport { Menu, MenuButton, MenuList, MenuItem, Button, Icon} from \"@chakra-ui/react\";\r\nimport { AiOutlineCalendar } from 'react-icons/ai';\r\nimport { FaList, FaTable } from 'react-icons/fa';\r\n\r\n\r\nexport function Filters(props) {\r\n    \r\n    const { \r\n        viewType,\r\n        onViewChange,\r\n        dateJump,\r\n        onDateJumpChange,\r\n        language,\r\n        onLanguageChange\r\n    } = props;\r\n\r\n\r\n    return(\r\n        <Stack isInline spacing=\"10px\">\r\n            \r\n            <Select \r\n                value={language} onChange={(e) => onLanguageChange(e.target.value)} \r\n                width=\"auto\" minWidth=\"110px\" bg=\"white\">\r\n                    {languages.map(language =>(\r\n                        <option key={language.value} value={language.value}>\r\n                            {language.label}\r\n                        </option>\r\n                    ))}\r\n            </Select>\r\n\r\n            <Menu>\r\n                <MenuButton\r\n                    as={Button} \r\n                    leftIcon={<AiOutlineCalendar />} \r\n                    px='15px'\r\n                    _focus={{boxShadow: 'none'}}\r\n                    textAlign='left'\r\n                    justifyContent='flex-start'\r\n                    bg='white' \r\n                    borderWidth={1} \r\n                    fontWeight={400} \r\n                    width=\"auto\" \r\n                    minWidth=\"100px\">\r\n                        <Box as='span' textTransform='capitalize'>{dateJump}</Box>\r\n                    {/* Date */}\r\n                </MenuButton>\r\n                <MenuList>\r\n                    <MenuItem onClick={() => onDateJumpChange('day')}>Daily</MenuItem>\r\n                    <MenuItem onClick={() => onDateJumpChange('week')}>Weekly</MenuItem>\r\n                    <MenuItem onClick={() => onDateJumpChange('month')}>Monthly</MenuItem>\r\n                    <MenuItem onClick={() => onDateJumpChange('year')}>Yearly</MenuItem>\r\n                </MenuList>\r\n            </Menu>    \r\n\r\n            <Stack isInline spacing={0} borderWidth={1} bg=\"white\" rounded='5px' alignItems=\"center\" ml='10px'>\r\n                <Button onClick={() => {onViewChange('grid')}} leftIcon={<FaTable/>} bg=\"transparent\" fontWeight={400} bg={ viewType === 'grid' ? 'gray.200' : 'white'} >Grid</Button>\r\n                <Button onClick={() => {onViewChange('list')}} leftIcon={<FaList/>} bg=\"transparent\" fontWeight={400} bg={ viewType === 'list' ? 'gray.200' : 'white'} >List</Button>\r\n            </Stack>            \r\n            \r\n        </Stack>\r\n    )\r\n}","import { Button } from '@chakra-ui/button';\r\nimport { Image } from '@chakra-ui/image';\r\nimport { Box, Flex, Heading, Link, Stack, Text } from '@chakra-ui/layout';\r\nimport React from 'react';\r\nimport moment from 'moment';\r\n\r\n\r\nimport { GoIssueOpened, GoRepoForked, GoStar } from \"react-icons/go\";\r\n\r\nexport function Repo(props) {\r\n\r\n    const {\r\n        viewType,\r\n        repo\r\n    } = props;\r\n\r\n    const isListView = viewType != 'grid';\r\n\r\n    return(\r\n        <Box borderWidth={1} bg='white' padding='15px' borderRadius=\"5px\">\r\n            <Stack >\r\n                {isListView && (\r\n                    <Flex justifyContent='space-between' alignItems=\"center\">\r\n                        <Stack>\r\n                            <Box mb=\"15px\">\r\n                                <Box mb=\"10px\">\r\n                                    <Heading fontSize=\"19px\" as='a' href={repo.html_url} target='_blank' color='purple.700'>{repo.name}</Heading>\r\n                                    <Text fontSize=\"14px\" color='gray.600'>\r\n                                        Built by &middot; <Link fontWeight={600} href={repo.owner.html_url} target='_blank'>\r\n                                            {repo.owner.login}</Link> &middot; {moment(repo.created_at).format('D.MM.YYYY')}\r\n                                    </Text>\r\n                                </Box>\r\n\r\n                                <Text fontSize=\"14px\" color=\"gray.600\">{repo.description}</Text>\r\n                            </Box>\r\n\r\n                            <Stack isInline>\r\n                                <Button \r\n                                    as='a' cursor='pointer' leftIcon={<GoStar/> } \r\n                                    variant='link' fontSize=\"14px\" iconSpacing=\"2px\" \r\n                                    _hover={{textDecor: 'none'}}\r\n                                    href={`${repo.html_url}/stargazers`} >{repo.stargazers_count}</Button>\r\n                                <Button \r\n                                    as='a' cursor='pointer' \r\n                                    leftIcon={<GoRepoForked/> } variant='link' fontSize=\"14px\" \r\n                                    iconSpacing=\"2px\" _hover={{textDecor: 'none'}}>{repo.forks_count}</Button>\r\n                                <Button \r\n                                    as='a' cursor='pointer' leftIcon={<GoIssueOpened/> } \r\n                                    variant='link' fontSize=\"14px\" iconSpacing=\"2px\" _hover={{textDecor: 'none'}}>{repo.open_issues_count}</Button>\r\n                            </Stack>\r\n                        </Stack>\r\n                        <Image \r\n                            src={repo.owner.avatar_url}\r\n                            w={'150px'}\r\n                            h={'150px'}\r\n                            rounded=\"80px\"\r\n                            mr=\"45px\" \r\n                        />\r\n                        {/* <Box ml=\"10px\">\r\n                            <Heading fontSize=\"16px\">Sam</Heading>\r\n                            <Text fontSize=\"14px\">View Profile</Text>\r\n                        </Box> */}\r\n                    </Flex>\r\n\r\n                )}\r\n                {!isListView && (\r\n                    <Stack>\r\n                        <Flex mb=\"15px\" alignItems=\"center\">\r\n                            <Image \r\n                                src={repo.owner.avatar_url}\r\n                                w={'35px'}\r\n                                h={'35px'}\r\n                                rounded=\"20px\" \r\n                            />\r\n                            <Box ml=\"10px\" >\r\n                                <Heading fontSize=\"16px\">{repo.owner.login}</Heading>\r\n                                <Text fontSize=\"14px\" as='a' href={repo.owner.html_url} target='_blank' color=\"blue.600\" fontWeight={600} >View Profile</Text>\r\n                            </Box>\r\n                        </Flex>\r\n                        <Box mb=\"15px\">\r\n                            <Box mb=\"10px\">\r\n                                <Heading fontSize=\"19px\" as='a' href={repo.html_url} target='_blank' color='purple.700'>{repo.name}</Heading>\r\n                                <Text fontSize=\"14px\" color='gray.600'>\r\n                                    Built by &middot; <Link fontWeight={600} href={repo.owner.html_url} target='_blank'>\r\n                                        {repo.owner.login}</Link> &middot; {moment(repo.created_at).format('D.MM.YYYY')}\r\n                                </Text>\r\n                            </Box>\r\n\r\n                            <Text fontSize=\"14px\" color=\"gray.600\">{repo.description}</Text>\r\n                        </Box>\r\n                        <Stack isInline>\r\n                            <Button \r\n                                as='a' cursor='pointer' leftIcon={<GoStar/> } \r\n                                variant='link' fontSize=\"14px\" iconSpacing=\"2px\" \r\n                                _hover={{textDecor: 'none'}}\r\n                                href={`${repo.html_url}/stargazers`} >{repo.stargazers_count}</Button>\r\n                            <Button \r\n                                as='a' cursor='pointer' \r\n                                leftIcon={<GoRepoForked/> } variant='link' fontSize=\"14px\" \r\n                                iconSpacing=\"2px\" _hover={{textDecor: 'none'}}>{repo.forks_count}</Button>\r\n                            <Button \r\n                                as='a' cursor='pointer' leftIcon={<GoIssueOpened/> } \r\n                                variant='link' fontSize=\"14px\" iconSpacing=\"2px\" _hover={{textDecor: 'none'}}>{repo.open_issues_count}</Button>\r\n                        </Stack>\r\n                    </Stack>\r\n                )}\r\n\r\n            </Stack>\r\n\r\n        </Box>\r\n    )\r\n}","import { Flex } from '@chakra-ui/layout';\r\nimport { Spinner } from '@chakra-ui/spinner';\r\nimport React from 'react';\r\n\r\nexport function PageLoader() {\r\n    return(\r\n        <Flex \r\n            position=\"fixed\"\r\n            left={0}\r\n            right={0}\r\n            bottom={0}\r\n            top={0}\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            bg=\"white\"\r\n            zIndex={999}\r\n        >\r\n            <Spinner thickness=\"4px\" color=\"gray.400\" />\r\n        </Flex>\r\n    )\r\n}","import React from 'react';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Header } from './components/page-header';\r\nimport { GroupTitle } from './components/group-title';\r\nimport { Filters } from './components/filters';\r\n\r\nimport { Box, Flex, SimpleGrid} from \"@chakra-ui/layout\";\r\nimport { Button } from \"@chakra-ui/button\";\r\n\r\nimport { Repo } from './components/repo';\r\nimport moment from 'moment';\r\nimport useFetch from 'use-http/dist/esm';\r\nimport { PageLoader } from './components/page-loader';\r\n\r\n\r\nfunction transformFilters({language, startDate, endDate}) {\r\n    const transformedFilters = {};\r\n\r\n    const languageQuery = language ? `language:${language} ` : '';\r\n    const dateQuery = `created:${startDate}..${endDate}`;\r\n\r\n    transformedFilters.q = languageQuery + dateQuery;\r\n    transformedFilters.sort = 'stars';\r\n    transformedFilters.order = 'desc';\r\n\r\n    return transformedFilters;\r\n}\r\n\r\nexport function Feed() {\r\n    const { loading, error, get } = useFetch('https://api.github.com');\r\n\r\n    const [viewType, setViewType] = useState('grid');\r\n    const [dateJump, setDateJump] = useState('day');\r\n    const [language, setLanguage] = useState('');\r\n\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState(moment().subtract(1, 'day').format());\r\n\r\n    const [repositories, setRepositories] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setRepositories([]);\r\n        const endDate = moment().subtract(1, 'day').format();\r\n        const startDate = moment(endDate).subtract(1, dateJump).format();\r\n\r\n        setEndDate(endDate);\r\n        setStartDate(startDate);\r\n\r\n    }, [dateJump, language])\r\n\r\n    useEffect(() => {\r\n        if (!startDate) {\r\n            return;\r\n        }\r\n\r\n        const filters = transformFilters( { language, startDate, endDate } ); \r\n        const filtersQuery = new URLSearchParams(filters).toString();\r\n\r\n        get(`/search/repositories?${filtersQuery}`).then((res) => {\r\n            setRepositories([\r\n                ...repositories,\r\n                {\r\n                    startDate,\r\n                    endDate,\r\n                    items: res.items\r\n                }\r\n            ])\r\n            console.log(res)\r\n        })\r\n\r\n    }, [startDate])\r\n\r\n\r\n    return(\r\n        <Box maxWidth='1200px' mx='auto' padding=\"10px\">\r\n            <Header/>\r\n            { repositories.length === 0 && loading && <PageLoader/> }   \r\n\r\n            <Flex alignItems=\"center\" justifyContent=\"space-between\" py=\"20px\">\r\n                <GroupTitle startDate={repositories?.[0]?.startDate} endDate={repositories?.[0]?.endDate} />\r\n                <Filters\r\n                    viewType={viewType}\r\n                    onViewChange={setViewType}\r\n                    dateJump={dateJump}\r\n                    onDateJumpChange={setDateJump}\r\n                    language={language}\r\n                    onLanguageChange={setLanguage}\r\n                />\r\n\r\n            </Flex>\r\n\r\n            {repositories.map((repoGroup, counter) => {\r\n                const groupTitle = counter > 0 && (\r\n                    <GroupTitle \r\n                            startDate={repoGroup.startDate} \r\n                            endDate={repoGroup.endDate} \r\n                    />\r\n                )\r\n\r\n                return (\r\n                    <Box>\r\n                        { groupTitle }\r\n                        <SimpleGrid columns={viewType === 'grid' ? 3 : 1} spacing='15px'>\r\n                            { repoGroup.items.map( repo => <Repo viewType={viewType} repo={repo} /> ) }\r\n                        </SimpleGrid>\r\n                    </Box>\r\n                )\r\n            })}\r\n\r\n            <Flex alignItems=\"center\" justifyContent=\"center\" mt=\"20px\" mb=\"20px\">\r\n                <Button isLoading={loading} onClick={() => {\r\n                    setEndDate(startDate);\r\n                    setStartDate(moment(startDate).subtract(1, dateJump).format())\r\n                }} colorScheme=\"blue\">Load next group</Button>\r\n            </Flex>\r\n\r\n        </Box>\r\n    )\r\n}","import { Box } from '@chakra-ui/layout';\r\nimport React from 'react';\r\nimport { Feed } from './feed';\r\n\r\nexport function App() {\r\n    return (\r\n        <Box width='100vw' minHeight=\"100vh\" bg='gray.100'>\r\n            <Feed/>\r\n        </Box>\r\n    )\r\n}","import CSSReset from '@chakra-ui/css-reset';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './app';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <CSSReset />\n      <App/>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}